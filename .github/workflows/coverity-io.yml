# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "SIGINT-183" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, lokesh]

    env:
      MAC_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/coverity-connect/0.1.16/coverity_connect-0.1.16-macosx.zip"
      LINUX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/coverity-connect/0.1.16/coverity_connect-0.1.16-linux64.zip"
      WINDOWS_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/coverity-connect/0.1.16/coverity_connect-0.1.16-win64.zip"

      BRIDGE_COVERITY_CONNECT_URL: ${{ secrets.COVERITY_URL }}
      BRIDGE_COVERITY_CONNECT_USER_NAME: ${{ secrets.COVERITY_USER }}
      BRIDGE_COVERITY_CONNECT_USER_PASSWORD: ${{ secrets.COVERITY_PASSPHRASE }}
      BRIDGE_COVERITY_CONNECT_STREAM_NAME: "central_scm_ms_stream"
      BRIDGE_COVERITY_CONNECT_PROJECT_NAME: ${{ secrets.COVERITY_PROJECT_NAME }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#      - name: Synopsys-action for Windows
#        if: ${{ runner.os == 'Windows' }}
#        run: |
#          Invoke-WebRequest -Uri ${{ env.WINDOWS_BRIDGE_URL }} -OutFile bridge.zip
#          tar -xf bridge.zip
#          .\bridge.exe --stage polaris
#        shell: powershell
#
#      - name: Synopsys-action for MAC
#        if: ${{  runner.os == 'macOS'  }}
#        run: |
#          brew install unzip
#          curl -o bridge.zip -L $MAC_BRIDGE_URL
#          unzip bridge.zip
#          ./bridge --stage polaris
#        shell: bash
#
#      - name: Synopsys-action for Linux
#        if: ${{  runner.os == 'Linux'  }}
#        run: |
#          sudo apt-get install unzip
#          curl -o bridge.zip -L $LINUX_BRIDGE_URL
#          unzip bridge.zip
#          ./bridge --stage polaris
#        shell: bash
#
      - name: Synopsys-action for Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          Invoke-WebRequest -Uri ${{ env.WINDOWS_BRIDGE_URL }} -OutFile bridge.zip
          tar -xf bridge.zip
          .\bridge.exe --stage connect
        shell: powershell

      - name: Synopsys-action for MAC
        if: ${{  runner.os == 'macOS'  }}
        run: |
          brew install unzip
          curl -o bridge.zip -L $MAC_BRIDGE_URL
          unzip bridge.zip
          ./bridge --stage connect
        shell: bash

      - name: Synopsys-action for Linux
        if: ${{  runner.os == 'Linux'  }}
        run: |
          apt install unzip
          curl -o bridge.zip -L $LINUX_BRIDGE_URL
          unzip bridge.zip
          ./bridge --stage connect
        shell: bash

      - name: Use synopsys unified-action
        # Use the action defined in this repository
        uses: ./
        with:
          polaris_serverUrl: ${{ secrets.POLARIS_SEVER_URL }}
          polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: "testapp1"
          polaris_project_name: "testproj1"
          polaris_assessment_types: "SAST"
          bridge_download_url: ${{ env.LINUX_BRIDGE_URL }}

      - name: Use synopsys unified-action - coverity-connect
        # Use the action defined in this repository
        uses: ./
        with:
          coverity_url: ${{ secrets.COVERITY_URL }}
          coverity_user: ${{ secrets.COVERITY_USER }}
          coverity_pasphrase: ${{ secrets.COVERITY_PASSPHRASE }}
          coverity_project_name: ${{ secrets.COVERITY_PROJECT_NAME }}
