# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "demo" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
#    runs-on: [self-hosted, Linux, kishor-linux]
    runs-on: [self-hosted, macOS, kishori]
#    runs-on: ubuntu-latest

    env:
#       BRIDGE_polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
#       BRIDGE_polaris_serverUrl: ${{ secrets.POLARIS_SEVER_URL }}
#       BRIDGE_polaris_application_name: central-scm-sast
#       BRIDGE_polaris_project_name: central-scm-proj
#       BRIDGE_polaris_assessment_types: "[\"SCA\"]"
#      POLARIS_FF_TEST_COVERITY_BETA_VERSIONS: true
      MAC_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-action/0.1.20/ci-package-0.1.20-macosx.zip"
      LINUX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-action/0.1.20/ci-package-0.1.20-linux64.zip"
      WINDOWS_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-action/0.1.20/ci-package-0.1.20-win64.zip"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#      - name: Synopsys-action for Windows
#        if: ${{ runner.os == 'Windows' }}
#        run: |
#          Invoke-WebRequest -Uri ${{ env.WINDOWS_BRIDGE_URL }} -OutFile bridge.zip
#          tar -xf bridge.zip
#          .\bridge.exe --stage polaris
#        shell: powershell
#
#       - name: Synopsys-action for MAC
#         if: ${{  runner.os == 'macOS'  }}
#         run: |
#           var="$(which unzip)"
#           if [[ $var =~ "not found" ]]; then
#             brew install unzip
#           fi  
#           curl -o bridge.zip -L $MAC_BRIDGE_URL
#           unzip bridge.zip
#           ./bridge --stage polaris
#         shell: bash
#
#       - name: Synopsys-action for Linux
#         if: ${{  runner.os == 'Linux'  }}
#         run: |
#           var="$(which unzip)"
#           if [[ $var =~ "not found" ]]; then
#             sudo apt-get install unzip
#           fi 
#           curl -o bridge.zip -L $LINUX_BRIDGE_URL
#           unzip bridge.zip
#           ./bridge --stage polaris
#         shell: bash

      - name: Use synopsys unified-action
        # Use the action defined in this repository
        uses: ./
        with:
          polaris_serverUrl: ${{ secrets.POLARIS_SEVER_URL }}
          polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: "App1"
          polaris_project_name: "Proj1"
          polaris_assessment_types: '["SCA", "SAST"]'
#          configure_from_repo: true
          bridge_download_url: ${{ env.MAC_BRIDGE_URL }}

#      - name: Use synopsys unified-action - coverity-connect
#        # Use the action defined in this repository
#        uses: ./
#        with:
#          coverity_url: ${{ secrets.COVERITY_URL }}
#          coverity_user: ${{ secrets.COVERITY_USER }}
#          coverity_pasphrase: ${{ secrets.COVERITY_PASSPHRASE }}
#          coverity_project_name: ${{ secrets.COVERITY_PROJECT_NAME }}
